//
// Tangent Works
//
// Created by Hamish McKenzie zootoolbox@googlegroups.com
// Created : 29 May 2005
//
// Description:
//  designed as a replacement for the set key hotkey.  this is a marking menu that
//  lets you push keys forward or backwards.  for example, if you're on a key, and
//  you want to quickly "push" the pose to the next keyframe, then the push foward
//  menu will do exactly that.  by default, the hotkey assigned to the marking menu
//  will simply set a keyframe.
//
// Usage:
//  assign this function to a key press:
//	 zooSetkey;
//
//  assign this function to the release;
//	 zooSetkeyKillUI;
//
// NOTE: if the hotkey you want to assign this script to contains
// either ctrl, alt or shift, then modify the "popupMenu" line below
// to reflect which key is used (ie if you're using alt-w then
// change it to -alt 1).
//


zooFlags;  //source zooFlags
zooTangentWksUtils;


global proc zooSetkey() {
	global int $zooIsClicked;
	string $panel = `getPanel -up`;

	$zooIsClicked = 0;
	if( `popupMenu -ex tempMM` ) deleteUI tempMM;
	if( `control -ex $panel` ) popupMenu -ctl 0 -alt 0 -sh 0 -mm 1 -b 1 -aob 1 -p $panel -pmc ( "zooSetkeyCreateUI tempMM 0;" ) tempMM;
	else performSetKeyframeArgList 1 {"0", "animationList"};
	}


global proc zooSetkeyCreateUI( string $parent, int $keyCommands ) {
	global int $zooIsClicked;
	string $selObjs[] = `ls -sl`;
	float $factor = `optionVar -ex zooCopycatFactor`? `optionVar -q zooCopycatFactor`: 0.1;
	int $smooth = `optionVar -ex zooSetkeySmooth`? `optionVar -q zooSetkeySmooth`: 0;
	float $curSpeed = `zooPlaySpeed -1 $smooth`;
	int $sel = `size $selObjs`;

	if( $keyCommands ) {
		zooKeyCommands "" "";
		zooKeyCommandsPopupMenu $parent;
		menuItem -d 1;
		}
	else menu -e -dai $parent;
	setParent -m $parent;

	$zooIsClicked = 1;
	menuItem -en $sel -l "push key forward" -c( "zooSetkeyPush fwd;" ) -rp E;
	menuItem -en $sel -l "push key backward" -c( "zooSetkeyPush bak;" ) -rp W;

	menuItem -en $sel -l "pull from forward key" -c( "zooCopycat right 1.0;" ) -rp NE;
	menuItem -en $sel -l "pull from previous key" -c( "zooCopycat left 1.0;" ) -rp NW;

	menuItem -en $sel -l "copycat value toward next" -c( "zooCopycat right "+ $factor +";" ) -rp SE;
	menuItem -en $sel -l "copycat value toward prev" -c( "zooCopycat left "+ $factor +";" ) -rp SW;

	menuItem -en $sel -l "copycat adjacent" -c( "zooCopycat left "+ $factor +"; zooCopycat right "+ $factor +";" ) -rp N;
	menuItem -en $sel -l "dragBreakdown" -c(python("from cgm.tools.lib import animToolsLib;animToolsLib.ml_breakdownDraggerCall()")) -rp "S";

	menuItem -en $sel -l "copycat (breakdown) factor" -sm 1;
		menuItem -l "nudge by 2%" -cb( $factor == 0.02 ) -c( "optionVar -fv zooCopycatFactor 0.02;" );
		menuItem -l "nudge by 5%" -cb( $factor == 0.05 ) -c( "optionVar -fv zooCopycatFactor 0.05;" );
		menuItem -l "nudge by 10%" -cb( $factor == 0.1 ) -c( "optionVar -fv zooCopycatFactor 0.1;" );
		menuItem -l "nudge by 25%" -cb( $factor == 0.25 ) -c( "optionVar -fv zooCopycatFactor 0.25;" );
		menuItem -l "nudge by 50%" -cb( $factor == 0.5 ) -c( "optionVar -fv zooCopycatFactor 0.5;" );
	setParent -m ..;
	menuItem -d 1;

	menuItem -en $sel -l "select all static keys" -c( "zooSelectStaticKeys static 1;" );
	menuItem -en $sel -l "select outer static keys" -c( "zooSelectStaticKeys outer 1;" );
	menuItem -en $sel -l "select inner static keys" -c( "zooSelectStaticKeys inner 1;" );
	menuItem -en $sel -l "select non static keys" -c( "zooSelectStaticKeys static 1; selectKey -tgl -k `ls -sl`;" );
	menuItem -d 1;

	menuItem -l "play on..." -sm 1;
		menuItem -l "ones" -cb( $curSpeed==1 ) -c( "zooPlaySpeed 1 "+ $smooth +";" );
		menuItem -l "twos" -cb( $curSpeed==0.5 ) -c( "zooPlaySpeed 0.5 "+ $smooth +";" );
		menuItem -l "threes" -cb( $curSpeed==0.33 ) -c( "zooPlaySpeed 0.33 "+ $smooth +";" );
		menuItem -l "fours" -cb( $curSpeed==0.25 ) -c( "zooPlaySpeed 0.25 "+ $smooth +";" );
		menuItem -d 1;
		menuItem -l "smooth (no frame holds)" -cb $smooth -c(($smooth? "optionVar -rm zooSetkeySmooth;": "optionVar -iv zooSetkeySmooth 1;") +"zooPlaySpeed "+ $curSpeed +" "+ (!$smooth));
	setParent -m ..;
	menuItem -l "open keyCommands" -c "source zooKeyCommandsWin;";
	}


//------
//sets or queries the playspeed for a scene - this can be used to set playback to
//be ones, twos, threes etc...  the smooth arg determines whether frames are held
//for longer, or subframes are played.  ie if smooth is true, then subframes are
//displayed.  if false, each frame is held for longer.  sometimes its useful to
//play back at half speed, instead of holding each frame for twice as long
//------
global proc float zooPlaySpeed( float $rate, int $smooth ) {
	float $playSpeed = `playbackOptions -q -ps`;  //the playspeed is basically the frame hold
	float $playBy = `playbackOptions -q -by`;  //the playby is the frame increment

	if( $smooth == -1 ) $smooth = `optionVar -ex zooSetkeySmooth`? `optionVar -q zooSetkeySmooth`: 0;
	if( $rate<0 ) {
		if( $smooth ) return $playBy;
		else return $playSpeed;
		}

	if( $smooth ) {
		playbackOptions -ps ($rate==1? 1: 0);
		playbackOptions -by $rate;
		}
	else {
		playbackOptions -ps $rate;
		playbackOptions -by 1;
		}

	return $rate;
	}


global proc float zooSetkeyDefaults( string $setting ) {
	int $exists = `optionVar -ex $setting`;
	if( $exists ) return((float)`optionVar -q $setting`);
	switch( $setting ) {
		case "zooCopycatFactor": return 0.05;
		}
	}


global proc zooSetkeyKillUI () {
	global int $zooIsClicked;
	if( `popupMenu -ex tempMM` ) {
		deleteUI tempMM;
		if ( !$zooIsClicked ) performSetKeyframeArgList 1 {"0", "animationList"};
		}

	$zooIsClicked = 0;
	}


//zoo.end